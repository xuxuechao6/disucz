var codeMap = {
    md: "zxsq_markdown",
    slide: "zxsq_slide",
    gv: "zxsq_graphviz",
    pre: "zxsq_code",
    math: "zxsq_mathjax",
    ditaa: "zxsq_ditaa",
    seq: "zxsq_sequence",
    flow: "zxsq_flowchart",
    mermaid: "zxsq_mermaid",
    rrd: "zxsq_railroad",
    mm: "zxsq_mindmap",
    plot: "zxsq_superplot"
};
var aceEditor;
var simplemde;
var attachurl;
var zxsqEditorLang;
var maximagesize;

function zxsq_editor_btn(d, b, c) {
    
    var a = !!window.ActiveXObject || "ActiveXObject" in window ? true : false;
    if (a) {
        showDialog(d.notie);
        return
    }
    checkFocus();
    alterEditor();
    show_editor_bg(d, b, c);
    show_zxsq_editor(d, b, c);
    return
}

function inArray(a, c) {
    var b = a.length;
    while (b--) {
        if (a[b] === c) {
            return true
        }
    }
    return false
}

function alterEditor() {
    var a = document.getElementById("e_switchercheck");
    if (a.checked == false) {
        a.click()
    }
    document.getElementById("allowimgcode").checked = false;
    document.getElementById("allowimgurl").checked = false;
    document.getElementById("smileyoff").checked = true;
    document.getElementById("parseurloff").checked = true;
    document.getElementById("e_textarea").style.fontFamily = "Courier New"
}

function checkSelect(b, c) {
    var a = checkInstall(b, c);
    if (!a) {
        return false
    } else {
        return true
    }
}

function checkInstall(d, f) {
    var c = document.getElementById("zxsq_editor_select").value;
    var a = codeMap[c];
    if (!d.hasOwnProperty(a)) {
        var b = "http://addon.discuz.com/?@" + a + ".plugin";
        var e = document.getElementById("zxsq_editor_preview");
        e.innerHTML = '<div style="padding-top:50px;padding-left:20px"><p><span style="font-size:20px;">' + f.notinstalled + '</span></p><p><a style="font-size:14px; color:#436EEE;" href="' + b + '" target="_blank">' + b + "</a></p></div>";
        return false
    } else {
        return true
    }
}

function loadSimplemde(a, f) {
    if (!inArray(a.enabledModule, "zxsq_markdown")) {
        return
    }
    aceDestroy();
    var g = document.getElementById("zxsq_editor_select").value;
    simplemde = new SimpleMDE({
        element: document.getElementById("zxsq_editor_input_textarea"),
        spellChecker: false,
        autoDownloadFontAwesome: false,
        autofocus: true,
        status: false,
        hideIcons: ["guide", "unordered-list", "ordered-list"],
        showIcons: ["table", "code"],
        renderingConfig: {
            codeSyntaxHighlighting: true
        }
    });
    var j = document.getElementById("zxsq_editor_input_textarea");
    var h = j.parentElement;
    var e = document.getElementById("zxsq_editor_preview");
    var c = makeDelay(500);
    simplemde.codemirror.on("change", function () {
        c(function () {
            markdownPreview(simplemde, e, j, f, false)
        })
    });
    h.querySelector(".editor-preview-side").className += " parsedown-markdown";
    if (g != "md") {
        simplemde.toTextArea();
        simplemde = null;
        var d = ["editor-toolbar", "CodeMirror", "editor-preview-side", "editor-statusbar"];
        for (var b in d) {
            var k = h.querySelector("." + d[b]);
            if (k) {
                if (k.remove) {
                    k.remove()
                } else {
                    k.removeNode()
                }
            }
        }
        aceBuild();
        return
    }
    return
}

function markdownPreview(b, g, d, f, a) {
    api = "";
    if (f[codeMap.plot]) {
        api = f[codeMap.plot]["api"]
    }
    if (!a) {
        d.value = b.value()
    }
    var c = b.value().replace(/```plot(:[\w: ]+)?[ ]*\n/g, function (i, h) {
        return "```plot" + h.replace(/[ ]+/g, "-") + "\n"
    });
    var e = b.options.previewRender(c) + "<br><br><p><hr></p>";
    e = e.replace(/<pre><code class="lang-mermaid">([\s\S]*)?<\/code><\/pre>/g, function (i, h) {
        return '<div class="mermaid">' + h.replace(/<span class=.*?>|<\/span>/g, "") + "</div>"
    });
    e = e.replace(/<pre><code class="lang-plot(:[\w:-]+)?">([\s\S]*)?<\/code><\/pre>/g, function (h, j, i) {
        cht = "gv";
        chof = "png";
        chl = "";
        src = "source/plugin/zxsq_superplot/images/loading.gif";
        if ($("img_editor_superplot")) {
            src = $("img_editor_superplot").src
        }
        if (j) {
            para = j.substr(1).split("-");
            if (para[0]) {
                cht = para[0]
            }
            if (para[1]) {
                chof = para[1]
            }
        }
        if (i) {
            chl = i.replace(/<span class=.*?>|<\/span>/g, "")
        }
        return '<div class="zxsq_superplot_form"><form style="display:none" id="editor_superplot" method="post" action="' + api + '" enctype="application/x-www-form-urlencoded"><input name="cht" value="' + cht + '"><input name="chof" value="' + chof + '"><textarea name="chl">' + chl + '</textarea></form><div style="text-align:center; margin:0 auto;"><img id="img_editor_superplot" style="max-width:90%;" src="' + src + '"></div></div>'
    });
    g.innerHTML = e.replace(/#mermaid-newline#/g, "\n");
    if (typeof MathJax != "undefined") {
        MathJax.Hub.Queue(["Typeset", MathJax.Hub, "zxsq_editor_preview"])
    }
    if (typeof mermaid != "undefined") {
        mermaid.init({
            noteMargin: 10
        }, ".mermaid")
    }
    if (api) {
        $("zxsq_editor_preview_button").disabled = false;
        $("zxsq_editor_preview_button").onclick = run_zxsq_superplot
    }
}

function syncScroll() {
    var d = false;
    var b = false;
    var c = document.getElementById("zxsq_editor_select").value;
    if (c == "md") {
        var a = document.getElementById("zxsq_editor_input").querySelector(".CodeMirror").querySelector(".CodeMirror-scroll")
    } else {
        var a = document.getElementById("zxsq_editor_input_textarea")
    }
    var e = document.getElementById("zxsq_editor_preview");
    a.onscroll = function () {
        if (!d) {
            b = true;
            e.scrollTop = this.scrollTop
        }
        d = false
    };
    e.onscroll = function () {
        if (!b) {
            d = true;
            a.scrollTop = this.scrollTop
        }
        b = false
    };
    return
}

function slideTemplate() {
    var d = document.getElementById("zxsq_editor_preview");
    var c = document.createElement("iframe");
    c.id = "slide-preview";
    c.width = "95%";
    c.height = "95%";
    var b = new Ajax();
    var a = "source/plugin/zxsq_slide/template/slide.htm";
    b.get(a, function (f, e) {
        if (e.XMLHttpRequest.status == "200") {
            slideTpl = e.XMLHttpRequest.response;
            slideTpl = slideTpl.replace(/\{\$theme\}/, "black");
            slideTpl = slideTpl.replace(/\{\$config\}/, "//UserConfig\n\n//EndUserConfig");
            slideTpl = slideTpl.replace(/\{\$markdown\}/, "<!--markdown-->\n# Input Markdown\n\n===\n<!--endmarkdown-->");
            slideTpl = slideTpl.replace(/\\\\/gm, "\\");
            c.srcdoc = slideTpl;
            c.src = "plugin.php?id=zxsq_editor:slide";
            d.appendChild(c)
        }
    })
}

function zxsq_ajaxget(b, c, a) {
    var d;
    if (window.XMLHttpRequest) {
        d = new XMLHttpRequest()
    } else {
        if (window.ActiveXObject) {
            d = new ActiveXObject("Microsoft.XMLHTTP")
        } else {
            return
        }
    }
    d.onreadystatechange = function () {
        c(d, a)
    };
    d.open("GET", b, true);
    d.send(null)
}

function superplotList_return(d, a) {
    if (d.readyState == 4) {
        if (d.status == 200) {
            try {
                var b = JSON.parse(d.responseText);
                for (var c in b) {
                    if (b[c]["desc"]) {
                        a.options.add(new Option(b[c]["desc"], c))
                    }
                }
                return (ret)
            } catch (f) {
                a.options.add(new Option("Graphviz(dot)", "gv:dot"))
            }
        } else {
            a.options.add(new Option("Graphviz(dot)", "gv:dot"))
        }
    }
}

function superplotList(b, a) {
    if (b[codeMap.plot]) {
        api = b[codeMap.plot]["api"];
        zxsq_ajaxget(api + "?list", superplotList_return, a)
    }
}

function subSelect(e, g, c) {

    var b = document.getElementById("zxsq_editor_select").value;
    var a = document.getElementById("zxsq_editor_select_subselect");
    loadSimplemde(c, e);
    switch (b) {
        case "plot":

            a.options.length = 0;
            superplotList(e, a);
            a.style.display = "block";
            break;
        case "gv":
        case "mm":

            a.options.length = 0;
            a.options.add(new Option("Dot", "dot"));
            a.options.add(new Option("Neato", "neato"));
            a.options.add(new Option("Fdp", "fdp"));
            a.options.add(new Option("Sfdp", "sfdp"));
            a.options.add(new Option("Twopi", "twopi"));
            a.options.add(new Option("Circo", "circo"));
            a.style.display = "block";
            break;
        case "seq":
            a.options.length = 0;
            a.options.add(new Option("Simple", "simple"));
            a.options.add(new Option("Hand", "hand"));
            a.style.display = "block";
            break;
        case "slide":
            a.options.length = 0;
            a.style.display = "none";
            break;
        case "md":
            a.options.length = 0;
            a.style.display = "none";
            break;
        default:
            a.options.length = 0;
            a.style.display = "none"
    }
    var h = document.getElementById("zxsq_editor_preview_button");
    if (b == "gv" || b == "ditaa" || b == "mm" || b == "plot" || b == "md") {
        h.disabled = false
    } else {
        h.disabled = true
    }
    var f = document.getElementById("zxsq_editor_preview");
    f.innerHTML = "";
    showPreview(e, g);
    return
}

function makeDelay(a) {
    var b = 0;
    return function (c) {
        clearTimeout(b);
        b = setTimeout(c, a)
    }
}

function showPreview(f, b) {
    var c = makeDelay(500);
    var d = makeDelay(1000);
    var a = checkInstall(f, b);
    if (!a) {
        return
    }
    var g = document.getElementById("zxsq_editor_select").value;
    var i = document.getElementById("zxsq_editor_input_textarea");
    var e = document.getElementById("zxsq_editor_preview");
    var h = document.getElementById("zxsq_editor_preview_button");
    if (g == "slide") {
        slideTemplate();
        aceEditor.getSession().selection.on("changeCursor", function (j) {
            cur = aceEditor.selection.getCursor();
            var l = aceEditor.getValue().split("\n");
            var k = l.slice(0, cur.row).join(".").length + 3;
            d(function () {
                slidePreview(k, e, i)
            })
        })
    }
    aceEditor.getSession().on("change", function (j) {
        i.value = aceEditor.getValue();
        switch (g) {
            case "seq":
                c(function () {
                    svgPreview(e, i, g)
                });
                break;
            case "flow":
                c(function () {
                    svgPreview(e, i, g)
                });
                break;
            case "mermaid":
                c(function () {
                    svgPreview(e, i, g)
                });
                break;
            case "math":
                c(function () {
                    mathPreview(e, i)
                });
                break;
            case "pre":
                c(function () {
                    codePreview(e, i)
                });
                break;
            default:
                break
        }
    });
    switch (g) {
        case "ditaa":
        case "mm":
        case "plot":
        case "gv":
            e.innerHTML = b.nolivepreview;
            h.onclick = function () {
                imgPreview(f, i, g)
            };
            break;
        default:
            break
    }
    return
}

function NumAscSort(d, c) {
    return d - c
}

function slidePreview(u, m, p) {
    var r = document.getElementById("slide-preview");
    if (r) {
        var t = {
            h: 0,
            v: 0
        };
        var h = slidePosition(p.value);
        var g = h.h.length;
        var o = h.v.length;
        var b = new Array();
        var c = h.h.concat(h.v);
        c.push(1);
        c.sort(NumAscSort);
        b["1"] = {
            h: 0,
            v: 0
        };
        var q = 0;
        for (var e = 0; e < o; e++) {
            if (h.v[e] < h.h[0]) {
                q++;
                b[String(h.v[e])] = {
                    h: 0,
                    v: q
                }
            }
        }
        for (var f = 0; f < g; f++) {
            var q = 0;
            b[String(h.h[f])] = {
                h: f + 1,
                v: q
            };
            for (var e = 0; e < o; e++) {
                if (h.v[e] >= h.h[f] && h.v[e] < h.h[f + 1]) {
                    q++;
                    b[String(h.v[e])] = {
                        h: f + 1,
                        v: q
                    }
                }
            }
        }
        var q = 0;
        hlast = (g - 1 < 0 ? 0 : h.h[g - 1]);
        for (var e = 0; e < o; e++) {
            if (h.v[e] >= hlast) {
                q++;
                b[String(h.v[e])] = {
                    h: g,
                    v: q
                }
            }
        }
        for (var d = 0; d < c.length; d++) {
            if (u > c[d]) {
                t = b[String(c[d])]
            }
        }
        var n = p.value;
        var l = r.srcdoc;
        var a = "<script>window.onload = function() {Reveal.slide(" + t.h + "," + t.v + ");}<\/script>";
        l = l.replace(/<\/body>/, "<!--navStart--><!--navEnd--></body>");
        l = l.replace(/(<!--navStart-->)(.*)?(<!--navEnd-->)/, "$1" + a + "$3");
        r.srcdoc = slideAttr(l, n)
    }
}

function slideAttr(l, o) {
    var c = new RegExp("^%%\\.theme:\\s?(.*?)%%", "m");
    var q = new RegExp("^%%\\.c\\.(\\w+):\\s?([\\w-\\/:]+)%%", "gm");
    var d = new RegExp("^%%\\.c\\.(\\w+):\\s?([\\w-\\/:]+)%%", "m");
    var p = new RegExp("^%%\\..*?%%\\s*\\r?\\n", "gm");
    var h = o.match(c);
    var m = o.match(q);
    var e = [];
    if (m) {
        for (var g = 0; g < m.length; g++) {
            var k = m[g].match(d);
            if (!k[2].match(/true|false|\d+/)) {
                k[2] = "'" + k[2] + "'"
            }
            e.push(k[1] + ":" + k[2])
        }
    }
    if (!h) {
        h = ["black", "league"]
    }
    var n = ["(zxsq_slide\\/revealjs\\/css\\/theme\\/)(\\w*)?(\\.css)", "(\\/\\/UserConfig\\n)(.*)?(\\n\\/\\/EndUserConfig)"];
    var j = ["$1" + h[1] + "$3", "$1" + e.join(",") + "$3"];
    l = preg_replace(n, j, l, "g");
    var r = ["^%s\\.ts\\.(#?[\\w\\s-]*?)%", "^%s\\.tss\\.(#?[\\w\\s-]*?)%", "^%s\\.bg\\.(#?[0-9a-zA-Z]*?)%", "^%s\\.bgi\\.(\\[img\\])?(http[s]?:\\/\\/[\\w\\.\\/-]*?)(\\[\\/img\\])?%", "^%s\\.bgi\\.(\\[url\\])?(http[s]?:\\/\\/[\\w\\.\\/-]*?)(\\[\\/url\\])?%(\\[\\/url\\])", "^%s\\.bgv\\.(\\[url\\])?(http[s]?:\\/\\/[\\w\\.\\/-]*?)(\\[\\/url\\])?%", "^%s\\.auto\\.([0-9]*?)%"];
    var b = ['<!-- .slide: data-transition="$1" -->', '<!-- .slide: data-transition-speed="$1" -->', '<!-- .slide: data-background-color="$1" -->', '<!-- .slide: data-background-image="$2" -->', '<!-- .slide: data-background-image="$2" -->', '<!-- .slide: data-background-video="$2" -->', '<!-- .slide: data-autoslide="$1" -->'];
    o = preg_replace(r, b, o, "gm");
    var a = ["@fg\\.([a-z]-]*?)@", "@index\\.([1-9]*?)@", "@auto\\.([0-9]*?)@"];
    var f = ['<!-- .element: class="fragment $1" -->', '<!-- .element: class="fragment" data-fragment-index="$1" -->', '<!-- .element: class="fragment" data-autoslide="$1" -->'];
    o = preg_replace(a, f, o, "g");
    o = o.replace(p, "");
    l = l.replace(/(<!--markdown-->)(.|[\r|\n])*?(<!--endmarkdown-->)/g, "$1\n" + o + "$3");
    return (l)
}

function slidePosition(c) {
    var e = new RegExp("^\\r?\\n(={3,}(\\r?\\n)?|\\r?\\n\\r?\\n)", "gm");
    var a = new RegExp("^\\r?\\n(\\|{3,}(\\r?\\n)?|\\r?\\n)", "gm");
    e.lastIndex = 0;
    a.lastIndex = 0;
    var d = {
        h: [],
        v: []
    };
    while (e.exec(c) != null) {
        d.h.push(e.lastIndex)
    }
    var b = c.replace(e, "===");
    while (a.exec(b) != null) {
        d.v.push(a.lastIndex)
    }
    return (d)
}

function imgPreview(h, c, g) {
    var b = c.value;
    var a = document.getElementById("zxsq_editor_select_subselect").value;
    var f = "";
    var e = "";
    if (g == "ditaa") {
        f = h[codeMap.ditaa]["ditaaApi"];
        e = "?cht=ditaa&chl="
    } else {
        if (g == "mm") {
            f = h[codeMap.mm]["api"];
            e = "?cht=markdown:" + a + "&chl="
        } else {
            if (g == "gv") {
                f = h[codeMap.gv]["gvApiUrl"];
                e = "?cht=gv:" + a + "&chl="
            } else {
                if (g == "plot") {
                    f = h[codeMap.plot]["api"];
                    e = "?cht=" + a + "&chl="
                }
            }
        }
    }
    var d = '<img src="' + f + e + encodeURIComponent(b.replace(/\n/mg, "\r\n")) + '"/>';
    document.getElementById("zxsq_editor_preview").innerHTML = d;
    return
}

function svgPreview(g, c, f) {
    var e = g.querySelector("script");
    var d = g.querySelector("div");
    if (e) {
        g.removeChild(e)
    }
    if (d) {
        g.removeChild(d)
    }
    var b = c.value;
    if (!b) {
        return
    }
    b = b.replace("\\n", "\\\\n");
    b = b.split("\n");
    var d = document.createElement("div");
    d.id = "zxsq_svg_preview";
    var e = document.createElement("script");
    switch (f) {
        case "mermaid":
            d.className = "mermaid";
            d.innerHTML = c.value;
            e.innerHTML = 'mermaid.init({noteMargin: 10}, ".mermaid");';
            break;
        case "flow":
            b = b.join("\\n' + \n'");
            e.innerHTML = "\nvar diagram = flowchart.parse('" + b + "');\ndiagram.drawSVG('zxsq_svg_preview');";
            break;
        case "seq":
            b = b.join("\\n\\\n ");
            var a = document.getElementById("zxsq_editor_select_subselect").value;
            e.innerHTML = '\nvar diagram = Diagram.parse("' + b + '");\ndiagram.drawSVG("zxsq_svg_preview", {theme: "' + a + '"});';
            break;
        default:
            break
    }
    g.appendChild(d);
    g.appendChild(e)
}

function htmlspecialchars(c) {
    var b = "";
    if (c.length == 0) {
        return ""
    }
    for (var a = 0; a < c.length; a++) {
        switch (c.substr(a, 1)) {
            case "<":
                b += "&lt;";
                break;
            case ">":
                b += "&gt;";
                break;
            case "&":
                b += "&amp;";
                break;
            case " ":
                if (c.substr(a + 1, 1) == " ") {
                    b += " &nbsp;";
                    a++
                } else {
                    b += " "
                }
                break;
            case '"':
                b += "&quot;";
                break;
            default:
                b += c.substr(a, 1);
                break
        }
    }
    return b
}

function codePreview(c, b) {
    var a = b.value;
    a = htmlspecialchars(a);
    c.innerHTML = "<pre><code>" + a + "</code></pre>";
    hljs.highlightBlock(c.querySelector("pre"))
}

function mathPreview(c, b) {
    var a = b.value;
    c.innerHTML = a;
    MathJax.Hub.Queue(["Typeset", MathJax.Hub, "zxsq_editor_preview"])
}

function aceBuild() {
    var a = document.getElementById("zxsq_editor_input_textarea");
    a.style.display = "none";
    var b = document.createElement("div");
    b.id = "zxsq_editor_ace";
    a.parentElement.appendChild(b);
    aceEditor = ace.edit("zxsq_editor_ace");
    aceEditor.setTheme("ace/theme/github");
    aceEditor.getSession().setMode("ace/mode/markdown");
    aceEditor.setValue(a.value);
    aceEditor.setHighlightActiveLine(true);
    aceEditor.getSession().setUseWrapMode(true)
}

function aceDestroy() {
    aceEditor.destroy();
    if (aceEditor.container.remove) {
        aceEditor.container.remove()
    } else {
        aceEditor.container.removeNode()
    }
}

function _zxsqajaxpost(formid, showid, waitid, showidclass, submitbtn, recall) {
    var waitid = typeof waitid == "undefined" || waitid === null ? showid : (waitid !== "" ? waitid : "");
    var showidclass = !showidclass ? "" : showidclass;
    var ajaxframeid = "ajaxframe";
    var ajaxframe = $(ajaxframeid);
    var curform = $(formid);
    var formtarget = curform.target;
    var handleResult = function () {
        var s = "";
        var evaled = false;
        showloading("none");
        try {
            s = $(ajaxframeid).contentWindow.document.XMLDocument.text
        } catch (e) {
            try {
                s = $(ajaxframeid).contentWindow.document.documentElement.innerText
            } catch (e) {
                try {
                    s = $(ajaxframeid).contentWindow.document.documentElement.firstChild.nodeValue
                } catch (e) {
                    s = "internal error"
                }
            }
        }
        if (s != "" && s.indexOf("ajaxerror") != -1) {
            evalscript(s);
            evaled = true
        }
        if (showidclass) {
            if (showidclass != "onerror") {
                $(showid).className = showidclass
            } else {
                showError(s);
                ajaxerror = true
            }
        }
        if (submitbtn) {
            submitbtn.disabled = false
        }
        if (!evaled && (typeof ajaxerror == "undefined" || !ajaxerror)) {
            ajaxinnerhtml($(showid), s)
        }
        ajaxerror = null;
        if (curform) {
            curform.target = formtarget
        }
        if (typeof recall == "function") {
            recall()
        } else {
            eval(recall)
        }
        if (!evaled) {
            evalscript(s)
        }
        ajaxframe.loading = 0;
        if (!BROWSER.firefox || BROWSER.safari) {
            $("append_parent").removeChild(ajaxframe.parentNode)
        } else {
            setTimeout(function () {
                $("append_parent").removeChild(ajaxframe.parentNode)
            }, 100)
        }
    };
    if (!ajaxframe) {
        var div = document.createElement("div");
        div.style.display = "none";
        div.innerHTML = '<iframe name="' + ajaxframeid + '" id="' + ajaxframeid + '" loading="1"></iframe>';
        $("append_parent").appendChild(div);
        ajaxframe = $(ajaxframeid)
    } else {
        if (ajaxframe.loading) {
            return false
        }
    }
    _attachEvent(ajaxframe, "load", handleResult);
    showloading();
    curform.target = ajaxframeid;
    var action = curform.getAttribute("action");
    action = hostconvert(action);
    curform.action = action.replace(/\&inajax\=1/g, "") + "&inajax=1";
    curform.submit();
    if (submitbtn) {
        submitbtn.disabled = true
    }
    doane();
    return false
}

function zxsqajaxpost(e, f, d, a, c, b) {
    $F("_zxsqajaxpost", arguments, "ajax")
}

function recall_imgUpload() {
    ret = JSON.parse($("zxsqimg_return").innerText);
    statusid = ret.picid;
    url = "![](" + ret.bigimg + ")";
    type = $("zxsq_editor_select").value;
    if (statusid > 0) {
        if (type == "md") {
            var a = simplemde.codemirror.getCursor();
            simplemde.codemirror.setSelection(a, a);
            simplemde.codemirror.replaceSelection(url)
        } else {
            var a = aceEditor.getCursorPosition();
            aceEditor.session.insert(a, url)
        }
    } else {
        $("zxsqimg_error").innerHTML = '<span style="color:red">' + zxsqEditorLang.uploaderror + maximagesize + 'KB</span>&nbsp;&nbsp;		<span id="zxsqimgtryagain"><a href="javascript:void(0)">' + zxsqEditorLang.tryagain + "</a></span>";
        $("zxsqimg_error").style.display = "block";
        $("zxsqimgattachform").style.display = "none";
        $("zxsqimgtryagain").onclick = function () {
            $("zxsqimgattachform").style.display = "block";
            $("zxsqimg_error").style.display = "none"
        }
    }
}

function doImgUpload() {
    var c = $("zxsqimgattachnew").value;
    var b = c.lastIndexOf(".");
    var a = b == -1 ? "" : c.substr(b + 1, c.length).toLowerCase();
    if (imgexts.indexOf(a) == -1) {
        $("zxsqimg_error").innerHTML = '<span style="color:red">' + zxsqEditorLang.onlyimgfile + "(" + imgexts + ' )</span>&nbsp;&nbsp;		<span id="zxsqimgtryagain"><a href="javascript:void(0)">' + zxsqEditorLang.tryagain + "</a></span>";
        $("zxsqimg_error").style.display = "block";
        $("zxsqimgattachform").style.display = "none";
        $("zxsqimgtryagain").onclick = function () {
            $("zxsqimgattachform").style.display = "block";
            $("zxsqimg_error").style.display = "none"
        }
    } else {
        zxsqajaxpost("zxsqimgattachform", "zxsqimg_return", "zxsqimg_return", "", "", recall_imgUpload)
    }
}



function screen_on(a) {
    maxh = document.documentElement.clientHeight;
    menuH = a.clientHeight;
    editorH = $("zxsq_editor").clientHeight;
    a.style.width = "100%";
    a.style.left = "0px";
    a.style.right = "0px";
    a.style.top = "0px";
    a.style.bottom = "0px";
    a.style.height = maxh + "px";
    $("zxsq_editor").style.height = (maxh - (menuH - editorH)) + "px";
    $("zxsq_editor").style.width = "100%";
    $("a_screen_control").innerHTML  = '<i class="icon iconfont icon-tuichuquanping"></i>'
}

function screen_off(a) {
    var b = JSON.parse($("screen_full_control_origin").innerHTML);
    a.style.width = b.width;
    a.style.left = b.left;
    a.style.top = b.top;
    a.style.right = "";
    a.style.bottom = "";
    a.style.height = "";
    $("zxsq_editor").style.height = b.height + "px";
    $("zxsq_editor").style.width = b.width;
    $("a_screen_control").innerHTML  = '<i class="icon iconfont icon-quanping"></i>'
}

function screenFullControl(b,v) {
    
    var d = $(b);
    var a;
    if (d.style.width == "100%") {
        a = "on"
    } else {
        a = "off";
        var c = document.createElement("div");
        c.id = "screen_full_control_origin";
        c.style.display = "none";
        c.innerHTML = '{"left":"' + d.style.left + '","top":"' + d.style.top + '","width":"' + d.style.width + '","height":"' + $("zxsq_editor").clientHeight + '"}';
        d.appendChild(c)
    }
    if (a == "off") {
        screen_on(d)
    }
    if (a == "on") {
        screen_off(d)
    }
}
function show_editor_bg(){
    var divObj=document.getElementById("editor_bg");
    divObj.classList.add("editor_bg_show");
   }
   function hiden_editor_bg(){
    var divObj=document.getElementById("editor_bg");
    divObj.classList.remove("editor_bg_show");
}
function hiden_editor(){
    hideMenu('', 'texexit');
    hiden_editor_bg();
    return false
}
function show_zxsq_editor(v, c, j, r) {
    oZxsqVar = j;
    zxsqEditorLang = v;
    j = JSON.stringify(j).replace(/"/g, "&quot;");
    strLang = JSON.stringify(v).replace(/"/g, "&quot;");
    strPluginVar = JSON.stringify(c).replace(/"/g, "&quot;");
    maximagesize = c.maximagesize;
    var t = "zxsq_editor";
    var n, u, d;
    var f = 0;
    var w = editorid + (r ? "_cst" + r + "_" : "_") + t;
    var b = $(w + "_menu");
    var g = [0, 0];
    var p = c.menuWidth;
    var l = "43!";
    var h = "menu";
    if (BROWSER.ie) {
        n = wysiwyg ? editdoc.selection.createRange() : document.selection.createRange();
        g = getCaret()
    }
    u = n ? (wysiwyg ? n.htmlText : n.text) : getSel();
    l = "00";
    h = "texexit";
    var b = document.createElement("div");
    b.id = w + "_menu";
    b.style.display = "none";
    b.className = "p_pof upf";
    b.style.width = p - 40 + "px";
    b.className = "fwinmask";
    select = '<div class="zxsq_editor_select"><select id="zxsq_editor_select" name="zxsq_editor_select" onChange="subSelect(' + j + "," + strLang + "," + strPluginVar + ');">';
    for (select_value in v) {
        if (select_value.indexOf("select_") == 0) {
            option = select_value.slice(7);
            key = codeMap[option];
            if (!inArray(c.enabledModule, key)) {
                continue
            }
            if (option == "md") {
                option = option + '" selected="selected'
            }
            select += '<option value="' + option + '">' + v[select_value] + "</option>"
        }
    }
    select += '</select>&nbsp;&nbsp;<select id="zxsq_editor_select_subselect" style="display:none"></select></div>';
    var m = c.editorTitle;
    var a = c.editorTips;
    if (a != "") {
        a = '<div class="notice upnf">' + v.tips + "<br>" + a + "</div>"
    }
    ul = '<ul class="tb_s cl" style="margin-top:0;margin-bottom:0;">'+
    '<li class="y" style="margin-right:2%">'+
    '<a class="e_btn_help" style="display:inline;" href="' + c.helpLink + '" target="_blank"> <i class="icon iconfont icon-bangzhu"></i></a>&nbsp;&nbsp;'+
    '<a  class="e_btn_size" id="a_screen_control" style="display:inline;" href="javascript:void(0)" onclick="screenFullControl(\'' + b.id + "',\'" + v + "')\"> <i class='icon iconfont icon-quanping'></i></a>"
    +'<span onclick="hiden_editor()"><i class="icon iconfont icon-guanbi"></i></span></li>'+
    '<li id="e_btn_www"><em style="font-size:18px;">' + m + '</em>&nbsp;&nbsp;&nbsp;&nbsp;'+
    '</li></ul>';
    s = '<container id="zxsq_editor_menutable" class="fwin">' +
    '<div class="mtm">' + ul + '</div>' +
    '<div class="p_opt popupfix">' + select + '' +
    '<div id="zxsq_editor" style="width:100%;">' +
    '<div id="zxsq_editor_input">' +
    '<textarea id="zxsq_editor_input_textarea" class="px" autocomplete="off" style="display:none"></textarea>' +
    '</div>' +
    '<div id="zxsq_editor_preview" class="parsedown-markdown"></div>' +
    '</div>' +
    '</div>' +a+
    '<div class="notice upnf"></div>'+
    '<div class="o pns">' +
    '<button type="submit" class="btnn zxsq_editor_submit" id="' + w + '_submit" class="pn pnc">' + v.submit + '</button>' +
    '</div></div></container>';
    b.innerHTML = s;
    $(editorid + "_editortoolbar").appendChild(b);
    showMenu({
        ctrlid: w,
        mtype: h,
        evt: "click",
        duration: 3,
        cache: 0,
        drag: 0,
        pos: l,
        maxh: "100%"
    });
    
 
    aceBuild();
    checkSelect(oZxsqVar, v);
    loadSimplemde(c, oZxsqVar);
    showPreview(oZxsqVar, v);
    syncScroll();
    try {
        if ($(w + "_param_1")) {
            $(w + "_param_1").focus()
        }
    } catch (q) {}
    var k = b.getElementsByTagName("*");
    for (var o = 0; o < k.length; o++) {
        _attachEvent(k[o], "keydown", function (i) {
            i = i ? i : event;
            obj = BROWSER.ie ? event.srcElement : i.target;
            if ((obj.type == "text" && i.keyCode == 13) || (obj.type == "textarea" && i.ctrlKey && i.keyCode == 13)) {
                if ($(w + "_submit") && t != "image") {
                    $(w + "_submit").click()
                }
                doane(i)
            } else {
                if (i.keyCode == 27) {
                    hideMenu();
                    doane(i)
                }
            }
        })
    }
    if ($(w + "_submit")) {
        $(w + "_submit").onclick = function () {
            checkFocus();
            if (BROWSER.ie && wysiwyg) {
                setCaret(g[0])
            }
            var z = document.getElementById("zxsq_editor_input_textarea");
            var y = document.getElementById("zxsq_editor_select").value;
            var i = document.getElementById("zxsq_editor_select_subselect").value;
            z.value = trim(z.value);
            var x = "[" + y + "]" + z.value + "[/" + y + "]";
            var e = "=";
            if (y == "plot") {
                e = " "
            }
            if (i) {
                x = "[" + y + e + i + "]" + z.value + "[/" + y + "]"
            }
            if (wysiwyg) {
                x = x.replace(/</g, "&lt;").replace(/(\r)*\n/g, "<br>").replace(/\t/g, "&nbsp;&nbsp;&nbsp;&nbsp;").replace(/\s/g, "&nbsp;");
                insertText(x, x.length, 0, false, n)
            } else {
                insertText(x, 0, 0, false, n)
            }
            hiden_editor_bg();
            hideMenu("", "texexit");
            hideMenu()
        }
    }
};